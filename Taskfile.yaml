version: "3"

env:
  MODULE_NAME: github.com/saltfishpr/go-learning

vars:
  VERSION:
    sh: git log -n 1 --format=%h

tasks:
  proto:
    cmds:
      - task: proto-go
      - task: proto-js
      - task: proto-java
    silent: true
  proto-go:
    cmds:
      - buf generate --template buf.gen.go.yaml proto
  proto-js:
    cmds:
      - buf generate --template buf.gen.js.yaml buf.build/googleapis/googleapis
      - buf generate --template buf.gen.js.yaml buf.build/envoyproxy/protoc-gen-validate
      - buf generate --template buf.gen.js.yaml proto
  proto-java:
    cmds:
      - buf generate --template buf.gen.java.yaml buf.build/envoyproxy/protoc-gen-validate
      - buf generate --template buf.gen.java.yaml proto

  proto-check:
    cmds:
      - buf lint proto
    silent: true
  proto-fmt:
    cmds:
      - buf format -w proto
    silent: true

  build:
    preconditions:
      - sh: test {{.SERVICE_NAME}}
        msg: "SERVICE_NAME is required"
    cmds:
      - go build -ldflags "-X main.Version={{.VERSION}}" -o bin/{{.SERVICE_NAME}} {{.MODULE_NAME}}/cmd/{{.SERVICE_NAME}}
    silent: true

  start:
    preconditions:
      - sh: test {{.SERVICE_NAME}}
        msg: "SERVICE_NAME is required"
    cmds:
      - bin/{{.SERVICE_NAME}} {{.CLI_ARGS}}
    silent: true

  build-image:
    preconditions:
      - sh: test {{.SERVICE_NAME}}
        msg: "SERVICE_NAME is required"
      - sh: test {{.DOCKER_HUB_USERNAME}}
        msg: "DOCKER_HUB_USERNAME is required"
    cmds:
      - docker buildx build --platform linux/arm,linux/arm64,linux/amd64 --pull --build-arg SERVICE_NAME={{.SERVICE_NAME}} --build-arg VERSION={{.VERSION}} -t {{.DOCKER_HUB_USERNAME}}/{{.SERVICE_NAME}}:{{.VERSION}} -t {{.DOCKER_HUB_USERNAME}}/{{.SERVICE_NAME}}:latest .
