// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: user/v1/user.proto

package com.github.saltfishpr.demo.user.v1;


/**
* Validates {@code LoginRequest} protobuf objects.
*/
@SuppressWarnings("all")
public class LoginRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<com.github.saltfishpr.demo.user.v1.LoginRequest>{
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		if (clazz.equals(com.github.saltfishpr.demo.user.v1.LoginRequest.class)) return new LoginRequestValidator();
		
		return null;
	}
		
	
		
	
	
	

	public void assertValid(com.github.saltfishpr.demo.user.v1.LoginRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.minLength(".saltfishpr.demo.user.v1.LoginRequest.username", proto.getUsername(), 3);
			io.envoyproxy.pgv.StringValidation.maxLength(".saltfishpr.demo.user.v1.LoginRequest.username", proto.getUsername(), 32);
	
			io.envoyproxy.pgv.StringValidation.minLength(".saltfishpr.demo.user.v1.LoginRequest.password", proto.getPassword(), 6);
			io.envoyproxy.pgv.StringValidation.maxLength(".saltfishpr.demo.user.v1.LoginRequest.password", proto.getPassword(), 32);
	
	
	}

}

