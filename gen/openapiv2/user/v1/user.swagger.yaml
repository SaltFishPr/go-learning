swagger: "2.0"
info:
  title: user/v1/user.proto
  version: version not set
tags:
  - name: UserService
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/{name}:
    get:
      operationId: UserService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userv1User'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - UserService
    delete:
      operationId: UserService_DeleteUser
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - UserService
  /v1/{user.name}:
    patch:
      operationId: UserService_UpdateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userv1User'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user.name
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: user
          in: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              email:
                type: string
        - name: mask
          in: query
          required: false
          type: string
      tags:
        - UserService
  /v1/login:
    post:
      operationId: UserService_Login
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LoginResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1LoginRequest'
      tags:
        - UserService
  /v1/register:
    post:
      operationId: UserService_Register
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RegisterResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RegisterRequest'
      tags:
        - UserService
  /v1/users:
    get:
      operationId: UserService_ListUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: offset
          in: query
          required: false
          type: string
          format: int64
        - name: limit
          in: query
          required: false
          type: string
          format: int64
      tags:
        - UserService
    post:
      operationId: UserService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/userv1User'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateUserRequestUser'
      tags:
        - UserService
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  userv1User:
    type: object
    properties:
      name:
        type: string
      username:
        type: string
      email:
        type: string
  v1CreateUserRequestUser:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      email:
        type: string
  v1ListUserResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/userv1User'
      count:
        type: string
        format: int64
  v1LoginRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  v1LoginResponse:
    type: object
    properties:
      token:
        type: string
  v1RegisterRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      email:
        type: string
  v1RegisterResponse:
    type: object
    properties:
      name:
        type: string
  v1UpdateUserRequestUser:
    type: object
    properties:
      name:
        type: string
      username:
        type: string
      password:
        type: string
      email:
        type: string
